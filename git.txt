В терминале запустите по очереди команды:
git config --global user.name "DS-975"
git config --global user.email 975ds579@gmail.com
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#
git status
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Чтобы добавить все файлы, которые находятся в директории, выполните следующую команду:
git add -A
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#
# Чтобы добавлять отдельные файлы, используйте ту же команду add, но с указанием имени файла:
git add this.js
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#
Но пока мы только собрали все те файлы, изменения в которых нам важны. Теперь их надо обвязать общей верёвочкой и единым ярлыком, то есть собрать их в коммит. Для этого необходимо выполнить следующую команду:
git commit -m "Создание админки 21 - 65 < - ☻☻☻CREATESUREPUSER☻☻☻"
#
git commit — команда, которая создаёт коммит с рядом параметров.
#
Флаг -m означает, что следом идёт сообщение (message): ярлык для наших изменений.
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#
# Давайте создадим новую ветку. Для этого выполним в Git-репозитории следующую команду:
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#
# Чтобы посмотреть на все ветки которые в Git-репозитории
#
git branch
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#
# Создать новую ветку develop | развивать:
#
git branch develop
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#
# Переход по веткам
# Переход на указанную ветку | develop | развивать:
#
git checkout develop
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#
# Удаление ветки
# Удаление ветки расположенной локально:
#
git branch -d название_ветки
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#
# * Если вы ошиблись в названии, например, допустили опечатку,
#   вы можете изменить название ветки с помощью команды:
#
git branch -m старое-имя-ветки новое-имя-ветки.
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#
# Чтобы в ветку develop влить master
# Для этого нам надо сначала переключиться на ту ветку,
# в которую мы хотим вливать (develop), а затем уже «мержить».
#
git checkout develop
#
git merge master
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#
git remote add origin https://github.com/DS-975/D3-Django_Git_master-develop.git
Обратите внимание, что вместо <your_name> и <remote_repository_name> следует указать ваш аккаунт на Github и название созданного на Github репозитория.

Остался последний шаг: пришло время добавить локальные изменения (коммит) на удалённый сервер. Для этого в терминале выполните команду:

// в папке Skillfactory

git push origin develop

Терминал запросит ваш Username и пароль.




DS-975/D3-Django_Git_master-develop
https://github.com/DS-975/D3-Django_Git_master-develop
git fetch [https://github.com/DS-975/D3-Django_Git_master-develop]
git fetch https://github.com/DS-975/D3-Django_Git_master-develop


git push -f origin develop

https://github.com/DS-975/D3-Django_Git_master-develop

git push --set-upstream origin develop

git pull origin develop
git push origin develop









